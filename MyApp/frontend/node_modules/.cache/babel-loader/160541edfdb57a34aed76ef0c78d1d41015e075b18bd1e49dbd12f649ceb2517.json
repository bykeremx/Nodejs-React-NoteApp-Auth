{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useContext } from 'react';\nimport AuthContext from '../context/AuthContext';\nimport { data, useNavigate } from 'react-router';\nconst useAuth = () => {\n  _s();\n  const {\n    AuthState,\n    AuthDispatch\n  } = useContext(AuthContext);\n  const navigate = useNavigate();\n  const [error, setError] = useState();\n  const Login = async (email, password) => {\n    //giriş işlemi yapılacak\n    //token alınacak ve context'e yüklencek\n\n    try {\n      const LoginFetch = await fetch('http://localhost:8080/api/user/login', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          email,\n          password\n        })\n      });\n      if (!LoginFetch.ok) {\n        console.log('Kullanıcı adı veya şifre yanlış');\n        navigate('/login');\n      }\n      const data = await LoginFetch.json();\n      // her şey doğru ilerliyor ise \n      console.log(data);\n      AuthDispatch({\n        type: 'LOGIN',\n        payload: {\n          token: data.token,\n          user: data.user\n        }\n      });\n      localStorage.setItem('token', data.token);\n    } catch (error) {\n      console.log();\n    }\n  };\n  return {\n    AuthState,\n    Login\n  };\n};\n_s(useAuth, \"nUCIkgGU7G/R7VXColVrvqayEe0=\", false, function () {\n  return [useNavigate];\n});\nexport default useAuth;","map":{"version":3,"names":["useContext","AuthContext","data","useNavigate","useAuth","_s","AuthState","AuthDispatch","navigate","error","setError","useState","Login","email","password","LoginFetch","fetch","method","headers","body","JSON","stringify","ok","console","log","json","type","payload","token","user","localStorage","setItem"],"sources":["C:/Users/mkere/Desktop/Mern-Stack-Uygulamaları/notUygulaması/frontend/src/hooks/useAuth.jsx"],"sourcesContent":["import {useContext} from 'react';\r\nimport AuthContext from '../context/AuthContext'\r\nimport { data, useNavigate } from 'react-router';\r\n\r\n\r\n\r\nconst useAuth = () => {\r\n    const {\r\n        AuthState,AuthDispatch\r\n    } = useContext(AuthContext);\r\n    const navigate = useNavigate();\r\n    const [error,setError] = useState();\r\n\r\n\r\n    const Login= async (email,password)=>{\r\n        //giriş işlemi yapılacak\r\n        //token alınacak ve context'e yüklencek\r\n\r\n        try {\r\n            const LoginFetch = await fetch('http://localhost:8080/api/user/login',{\r\n                method:'POST',\r\n                headers:{\r\n                    'Content-Type':'application/json'\r\n                },\r\n                body:JSON.stringify({\r\n                    email,\r\n                    password\r\n                })\r\n            });\r\n            if(!LoginFetch.ok){\r\n                console.log('Kullanıcı adı veya şifre yanlış');\r\n                navigate('/login');\r\n            }\r\n            const data = await LoginFetch.json();\r\n            // her şey doğru ilerliyor ise \r\n            console.log(data)\r\n            AuthDispatch({\r\n                type:'LOGIN',\r\n                payload:{\r\n                    token:data.token,\r\n                    user:data.user\r\n                }\r\n            });\r\n            localStorage.setItem('token',data.token);\r\n            \r\n\r\n\r\n\r\n        } catch (error) {\r\n\r\n            console.log();\r\n            \r\n        }\r\n\r\n    }\r\n\r\n    return {\r\n        AuthState,\r\n        Login\r\n    }\r\n}\r\n\r\n\r\nexport default useAuth;"],"mappings":";AAAA,SAAQA,UAAU,QAAO,OAAO;AAChC,OAAOC,WAAW,MAAM,wBAAwB;AAChD,SAASC,IAAI,EAAEC,WAAW,QAAQ,cAAc;AAIhD,MAAMC,OAAO,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAClB,MAAM;IACFC,SAAS;IAACC;EACd,CAAC,GAAGP,UAAU,CAACC,WAAW,CAAC;EAC3B,MAAMO,QAAQ,GAAGL,WAAW,CAAC,CAAC;EAC9B,MAAM,CAACM,KAAK,EAACC,QAAQ,CAAC,GAAGC,QAAQ,CAAC,CAAC;EAGnC,MAAMC,KAAK,GAAE,MAAAA,CAAOC,KAAK,EAACC,QAAQ,KAAG;IACjC;IACA;;IAEA,IAAI;MACA,MAAMC,UAAU,GAAG,MAAMC,KAAK,CAAC,sCAAsC,EAAC;QAClEC,MAAM,EAAC,MAAM;QACbC,OAAO,EAAC;UACJ,cAAc,EAAC;QACnB,CAAC;QACDC,IAAI,EAACC,IAAI,CAACC,SAAS,CAAC;UAChBR,KAAK;UACLC;QACJ,CAAC;MACL,CAAC,CAAC;MACF,IAAG,CAACC,UAAU,CAACO,EAAE,EAAC;QACdC,OAAO,CAACC,GAAG,CAAC,iCAAiC,CAAC;QAC9ChB,QAAQ,CAAC,QAAQ,CAAC;MACtB;MACA,MAAMN,IAAI,GAAG,MAAMa,UAAU,CAACU,IAAI,CAAC,CAAC;MACpC;MACAF,OAAO,CAACC,GAAG,CAACtB,IAAI,CAAC;MACjBK,YAAY,CAAC;QACTmB,IAAI,EAAC,OAAO;QACZC,OAAO,EAAC;UACJC,KAAK,EAAC1B,IAAI,CAAC0B,KAAK;UAChBC,IAAI,EAAC3B,IAAI,CAAC2B;QACd;MACJ,CAAC,CAAC;MACFC,YAAY,CAACC,OAAO,CAAC,OAAO,EAAC7B,IAAI,CAAC0B,KAAK,CAAC;IAK5C,CAAC,CAAC,OAAOnB,KAAK,EAAE;MAEZc,OAAO,CAACC,GAAG,CAAC,CAAC;IAEjB;EAEJ,CAAC;EAED,OAAO;IACHlB,SAAS;IACTM;EACJ,CAAC;AACL,CAAC;AAAAP,EAAA,CAtDKD,OAAO;EAAA,QAIQD,WAAW;AAAA;AAqDhC,eAAeC,OAAO","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}